#ifndef SSD1306_FONT_H
#define SSD1306_FONT_H

#include <stdint.h>

// Seu array de fontes
static uint8_t font[] = {
    // Caractere 0: Espaço (ou "Nothing")
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // Espaço (0x20)
    // Caractere 1: A
    0x78,0x14,0x12,0x11,0x12,0x14,0x78,0x00, // 'A'
    // Caractere 2: B
    0x7f,0x49,0x49,0x49,0x49,0x49,0x7f,0x00, // 'B'
    // Caractere 3: C
    0x7e,0x41,0x41,0x41,0x41,0x41,0x41,0x00, // 'C'
    // Caractere 4: D
    0x7f,0x41,0x41,0x41,0x41,0x41,0x7e,0x00, // 'D'
    // Caractere 5: E
    0x7f,0x49,0x49,0x49,0x49,0x49,0x49,0x00, // 'E'
    // Caractere 6: F
    0x7f,0x09,0x09,0x09,0x09,0x01,0x01,0x00, // 'F'
    // Caractere 7: G
    0x7f,0x41,0x41,0x41,0x51,0x51,0x73,0x00, // 'G'
    // Caractere 8: H
    0x7f,0x08,0x08,0x08,0x08,0x08,0x7f,0x00, // 'H'
    // Caractere 9: I
    0x00,0x00,0x00,0x7f,0x00,0x00,0x00,0x00, // 'I'
    // Caractere 10: J
    0x21,0x41,0x41,0x3f,0x01,0x01,0x01,0x00, // 'J'
    // Caractere 11: K
    0x00,0x7f,0x08,0x08,0x14,0x22,0x41,0x00, // 'K'
    // Caractere 12: L
    0x7f,0x40,0x40,0x40,0x40,0x40,0x40,0x00, // 'L'
    // Caractere 13: M
    0x7f,0x02,0x04,0x08,0x04,0x02,0x7f,0x00, // 'M'
    // Caractere 14: N
    0x7f,0x02,0x04,0x08,0x10,0x20,0x7f,0x00, // 'N'
    // Caractere 15: O
    0x3e,0x41,0x41,0x41,0x41,0x41,0x3e,0x00, // 'O'
    // Caractere 16: P
    0x7f,0x11,0x11,0x11,0x11,0x11,0x0e,0x00, // 'P'
    // Caractere 17: Q
    0x3e,0x41,0x41,0x49,0x51,0x61,0x7e,0x00, // 'Q'
    // Caractere 18: R
    0x7f,0x11,0x11,0x11,0x31,0x51,0x0e,0x00, // 'R'
    // Caractere 19: S
    0x46,0x49,0x49,0x49,0x49,0x30,0x00,0x00, // 'S'
    // Caractere 20: T
    0x01,0x01,0x01,0x7f,0x01,0x01,0x01,0x00, // 'T'
    // Caractere 21: U
    0x3f,0x40,0x40,0x40,0x40,0x40,0x3f,0x00, // 'U'
    // Caractere 22: V
    0x0f,0x10,0x20,0x40,0x20,0x10,0x0f,0x00, // 'V'
    // Caractere 23: W
    0x7f,0x20,0x10,0x08,0x10,0x20,0x7f,0x00, // 'W'
    // Caractere 24: X
    0x00,0x41,0x22,0x14,0x14,0x22,0x41,0x00, // 'X'
    // Caractere 25: Y
    0x01,0x02,0x04,0x78,0x04,0x02,0x01,0x00, // 'Y'
    // Caractere 26: Z
    0x41,0x61,0x59,0x45,0x43,0x41,0x00,0x00, // 'Z'
    // Caractere 27: 0
    0x3e,0x41,0x41,0x41,0x41,0x41,0x3e,0x00, // '0'
    // Caractere 28: 1
    0x00,0x00,0x42,0x7f,0x40,0x00,0x00,0x00, // '1'
    // Caractere 29: 2
    0x30,0x49,0x49,0x49,0x49,0x46,0x00,0x00, // '2'
    // Caractere 30: 3
    0x49,0x49,0x49,0x49,0x49,0x49,0x36,0x00, // '3'
    // Caractere 31: 4
    0x3f,0x20,0x20,0x78,0x20,0x20,0x00,0x00, // '4'
    // Caractere 32: 5
    0x4f,0x49,0x49,0x49,0x49,0x30,0x00,0x00, // '5'
    // Caractere 33: 6
    0x3f,0x48,0x48,0x48,0x48,0x48,0x30,0x00, // '6'
    // Caractere 34: 7
    0x01,0x01,0x01,0x61,0x31,0x0d,0x03,0x00, // '7'
    // Caractere 35: 8
    0x36,0x49,0x49,0x49,0x49,0x49,0x36,0x00, // '8'
    // Caractere 36: 9
    0x06,0x09,0x09,0x09,0x09,0x09,0x7f,0x00, // '9'
    // Caractere 37: ':' 
    0x00,0x10,0x10,0x00,0x00,0x10,0x10,0x00, // ':'
    // Caractere 38: '*' 
    0x00,0x24,0x18,0x7e,0x18,0x24,0x00,0x00, // '*' 
    // Caractere 39: '#' 
    0x00,0x24,0x24,0x7e,0x24,0x7e,0x24,0x24  // '#'
};

static inline int get_font_index(char c) {
    if (c >= 'A' && c <= 'Z') return c - 'A' + 1;   // Letras A-Z começam no índice 1
    if (c >= '0' && c <= '9') return c - '0' + 27;  // Números 0-9 começam no índice 27
    if (c == ':') return 37;  // Índice de ':'
    if (c == '*') return 38;  // Índice de '*'
    if (c == '#') return 39;  // Índice de '#'

    return 0; // Retorna índice 0 (espaço vazio) se o caractere não for encontrado
}

#endif